@using Domain.Models


@model Member
@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier) ?? "anonymous";
    var notifications = await notificationService.GetNotificationsAsync(userId);
    notifications = notifications.OrderByDescending(x => x.Created);
}

<form class="search" role="search" method="get">
    <span class="search-icon" href="#"><i class=" bi bi-search"></i></span>
    <input class="search-bar me-2" type="search" placeholder="Search anything.." aria-label="Search">
</form>

<div class="icon-nav">
    <div id="notification-container">
        <button  type="button" data-type="dropdown" data-target="#notification-dropdown" class="btn-notification">
            <i class="bi bi-bell-fill"></i>
            @if (notifications.Any())
            {
                <div class="dot dot-red"></div>
            }  
        </button>

        <div id="notification-dropdown" class="dropdown">

            <div class="notification-header">
                <h4>Notifications</h4>
                <span class="notification-number">@notifications.Count()</span>
            </div>

            <div class="separator"></div>

            <div class="notifications">
                @foreach(var notification in notifications)
                {  
                    
                    <div class="notification-content" data-id="">
                        <img class="notification-image" src="@Url.Content("~/" + notification.Icon)" alt="profile picture">
                     
                    <div class="notification-info">
                            <div class="message">@notification.Message</div>
                            <div class="time" data-created="@notification.Created.ToString("s")">@notification.Created</div>
                    </div>
                    <button class="notification-close-btn" onclick="dismissNotification(@notification.Id)">X</button>
                </div>
                    
                }
              
            </div>
        </div>


    </div>
    <div class="settings ">
        <a class="btn-setting" href="#"><i class="bi bi-gear-fill"></i></a>
    </div>

    <div class="break">|</div>

    <div id="account-container">
    <button type="button" data-type="dropdown" data-target="#account-dropdown" class="btn-account">
        <div class="nav-account">
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <img src="@Url.Content("~/" + Model.Image)" alt="profile picture">
            }
            else
            {
                <img src="~/images/avatar-icon.svg" alt="profile picture">
            }
            </div>

    </button>
        <div id="account-dropdown" class="dropdown">
            <div class="dropdown-header">
                <div class="account-name">
                    @if (!string.IsNullOrEmpty(Model.Image))
                    {
                        <img src="@Url.Content("~/" + Model.Image)" alt="profile picture">
                    }
                    else
                    {
                        <img src="~/images/avatar-icon.svg" alt="profile picture">
                    }
                    <h5>@Model.FirstName @Model.LastName</h5>
                </div>
            </div>
          
            <div class="dropdown-body">
                <div class="dropdown-action">
                    <label for="darkModelToggle" class="switch-lable">
                        <i class="bi bi-gear-fill"></i>
                        <span>Dark Mode</span>
                        </label>
                    <label class="switch">
                        <input type="checkbox" id="darkModelToggle" data-type="toggle" data-func="darkmode" />
                        <span class="slider"></span>
                    </label>
                </div>
                
                <div class="separator"></div>
                <a class="btn-logout dropdown-action" asp-controller="Auth" asp-action="SignOut"><i class="bi bi-box-arrow-right"></i>Log Out</a>
            </div>
        </div>

    </div>
    
</div>

